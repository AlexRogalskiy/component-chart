{{- range $rulesIndex, $ingressRule := $.Values.ingress.rules }}
{{- if eq $rulesIndex 0 }}
{{- $tlsSecretName := "" }}
{{- if $.Values.ingress.tls }}
{{- if not (eq (printf "%s" $.Values.ingress.tls) (printf "%s" false)) }}
  {{- if eq (printf "%s" $.Values.ingress.tls) (printf "%s" true) }}
  {{- if $.Values.ingress.name }}
    {{- $tlsSecretName = (printf "tls-%s" $.Values.ingress.name) }}
  {{- else }}
  {{- if $.Values.service.name }}
    {{- $tlsSecretName = (printf "tls-%s" $.Values.service.name) }}
  {{- else }}
    {{- $tlsSecretName = (printf "tls-%s" $.Release.Name) }}
  {{- end }}
  {{- end }}
  {{- else }}
    {{- $tlsSecretName = $.Values.ingress.tls }}
  {{- end }}
{{- end }}
{{- end }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  {{- if $.Values.ingress.name }}
  name: {{ $.Values.ingress.name | quote }}
  {{- else }}
  {{- if $.Values.ingress.serviceName }}
  name: {{ $.Values.ingress.serviceName | quote }}
  {{- else }}
  {{- if $.Values.service.name }}
  name: {{ $.Values.service.name | quote }}
  {{- else }}
  name: {{ $.Release.Name | quote }}
  {{- end }}
  {{- end }}
  {{- end }}
  labels:
    "app.kubernetes.io/name": {{ $.Release.Name | quote }}
    "app.kubernetes.io/managed-by": {{ $.Release.Service | quote }}
    {{- range $labelName, $labelValue := $.Values.ingress.labels }}
    {{ $labelName | quote }}: {{ $labelValue | quote }}
    {{- end }}
  annotations:
    "helm.sh/chart": "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    {{- if ne (printf "%s" $tlsSecretName) "" }}
    cert-manager.io/cluster-issuer: {{ $.Values.ingress.tlsClusterIssuer | default "lets-encrypt-http-issuer" | quote }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.ingress.tlsClusterIssuer | default "lets-encrypt-http-issuer" | quote }}
    acme.cert-manager.io/http01-ingress-class: {{ $.Values.ingress.ingressClass | default "nginx" | quote }}
    certmanager.k8s.io/http01-ingress-class: {{ $.Values.ingress.ingressClass | default "nginx" | quote }}
    {{- end }}
    {{- range $annotationName, $annotationValue := $.Values.ingress.annotations }}
    {{ $annotationName | quote }}: {{ $annotationValue | quote }}
    {{- end }}
spec:
  rules:
  {{- range $ingressRuleIndex, $ingressRule := $.Values.ingress.rules }}
  - host: {{ $ingressRule.host | quote }}
    http:
      paths:
      - backend:
          {{- if $ingressRule.serviceName }}
          serviceName: {{ $ingressRule.serviceName | quote }}
          {{- else }}
          {{- if $.Values.service.name }}
          serviceName: {{ $.Values.service.name | quote }}
          {{- else }}
          serviceName: {{ $.Release.Name | quote }}
          {{- end }}
          {{- end }}
          {{- if $ingressRule.servicePort }}
          servicePort: {{ $ingressRule.servicePort }}
          {{- else }}
          servicePort: {{ (index $.Values.service.ports 0).port }}
          {{- end }}
        {{- if $ingressRule.path }}
        path: {{ $ingressRule.path | quote }}
        {{- else }}
        path: /
        {{- end }}
  {{- end }}
  {{- if ne (printf "%s" $tlsSecretName) "" }}
  tls:
  - hosts:
    {{- range $ingressRuleIndex, $ingressRule := $.Values.ingress.rules }}
    - {{ $ingressRule.host }}
    {{- end }}
    secretName: {{ $tlsSecretName | quote }}
  {{- end }}

---

{{- end }}
{{- end }}
